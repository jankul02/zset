      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: kafka
        namespace: {{namespace}}
        labels:
          app: {{kafka.app}}
      spec:
        selector:
          matchLabels:
            app: {{kafka.app}}
        serviceName: kafka
        replicas: {{kafka.autoscale.target }}   
        updateStrategy:
          type: RollingUpdate
        podManagementPolicy: Parallel
        template:
          metadata:
            labels:
              app: {{kafka.app}}
            annotations:
              rolloutAnnotation: {{kafkaRolloutAnnotation}}
          spec:
            affinity:
              podAntiAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: "app"
                          operator: In
                          values:
                          - {{kafka.app}}
                    topologyKey: "kubernetes.io/hostname"
            containers:
            - name: kafka-broker
              image: {{kafka.image}}
              imagePullPolicy: "Always"
              resources:
                {}              
              ports:
              - containerPort: 9093
                name: tcp-intra-kafka
              - containerPort: 9092
                name: tcp-inter-kafka
              command:
              - sh
              - -c
              - /etc/confluent/docker/start-kafka 
              securityContext:
                runAsUser: 0
              env:
              - name: POD_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              - name: HOST_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: POD_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
