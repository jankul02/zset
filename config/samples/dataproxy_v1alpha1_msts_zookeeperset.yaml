apiVersion: dataproxy.jankul02/v1alpha1
kind: ZookeeperSet
metadata:
  name: zookeeperset-lab
  namespace: default
spec:
  app: zk
  autoscale:
    range:
      min: 3
      max: 5
  maxUnavailable: 1
  updateOnChange:
  - kind: ConfigMap
    name: zk-config
  - kind: Secret
    name: zksecrets0    
  image: jankul02/kubernetes-zookeeper:0.0.30
  instances:
  - id: "0"
    nodeSelector:
      zkinstanceid: "0"
    updateOnChange:
    - kind: Secret
      name: zksecrets0
    spec:
      env: 
        - name: ZOOKEEPER_TOOLS_LOG4J_LOGLEVEL
          value: DEBUG
        - name: ZOOKEEPER_LOG4J_ROOT_LOGLEVEL
          value: INFO
        - name: WELCOME_MESSAGE
          value: "Hello ajaja 1000"
        - name: ADDITIONAL_PARAM
          value: " 2311225"
      volumeMounts:
        # name must match the volume name below
        - name: zksecrets0
          mountPath: /mnt/zksecrets
        # The secret data is exposed to Containers in the Pod through a Volume.
      volumes:
        - name: zksecrets0
          secret:
            secretName: zksecrets0
  - id: "2"
    nodeSelector:
      zkinstanceid: "2"  
    updateOnChange:
    - kind: Secret
      name: zksecrets2
    spec:  
      env: 
        - name: ZOOKEEPER_TOOLS_LOG4J_LOGLEVEL
          value: INFO
        - name: ZOOKEEPER_LOG4J_ROOT_LOGLEVEL
          value: INFO
        - name: WELCOME_MESSAGE
          value: "How are you 2ooo"
        - name: ADDITIONAL_PARAM
          value: " 231100-q3242"
      volumeMounts:
        # name must match the volume name below
        - name: zksecrets2
          mountPath: /mnt/zksecrets
        # The secret data is exposed to Containers in the Pod through a Volume.
      volumes:
        - name: zksecrets2
          secret:
            secretName: zksecrets2
  kafkaapp: kafkaapp

# secureClientPort=2182
# serverCnxnFactory=org.apache.zookeeper.server.NettyServerCnxnFactory
# authProvider.x509=org.apache.zookeeper.server.auth.X509AuthenticationProvider
# ssl.keyStore.location=<path-to-zookeeper-keystore>
# ssl.keyStore.password=<zookeeper-keystore-password>
# ssl.trustStore.location=<path-to-zookeeper-trustore>
# ssl.trustStore.password=<zookeeper-truststore-password>


# # Connect to the ZooKeeper port configured for TLS
# zookeeper.connect=zk1:2182,zk2:2182,zk3:2182
# # Required to use TLS-to-ZooKeeper (default is false)
# zookeeper.ssl.client.enable=true
# # Required to use TLS-to-ZooKeeper
# zookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty
# # Define key/trust stores to use TLS-to-ZooKeeper; ignored unless zookeeper.ssl.client.enable=true
# zookeeper.ssl.keystore.location=<path-to-kafka-keystore>
#   =<kafka-keystore-password>
# zookeeper.ssl.truststore.location=<path-to-kafka-trustore>
# zookeeper.ssl.truststore.password=<kafka-truststore-password>
# # Tells broker to create ACLs on znodes
# zookeeper.set.acl=true